// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using appcuoi.Data.Context;

#nullable disable

namespace appcuoi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231112053819_v1.0")]
    partial class v10
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("appcuoi.Data.Models.District", b =>
                {
                    b.Property<int>("DistricId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistricId"));

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DistricId");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            DistricId = 1,
                            DistrictName = "Quan Hai Ba Trung"
                        },
                        new
                        {
                            DistricId = 2,
                            DistrictName = "Quan Hoang Mai"
                        },
                        new
                        {
                            DistricId = 3,
                            DistrictName = "Quan CauGiay"
                        });
                });

            modelBuilder.Entity("appcuoi.Data.Models.Houses", b =>
                {
                    b.Property<int>("HouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HouseId"));

                    b.Property<DateTime>("Createdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HouseDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HouseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StreetId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("HouseId");

                    b.HasIndex("StreetId");

                    b.HasIndex("UserId");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("appcuoi.Data.Models.Street", b =>
                {
                    b.Property<int>("StreetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StreetId"));

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WardId")
                        .HasColumnType("int");

                    b.HasKey("StreetId");

                    b.HasIndex("WardId");

                    b.ToTable("Streets");

                    b.HasData(
                        new
                        {
                            StreetId = 1,
                            StreetName = "Ta Quang Buu",
                            WardId = 1
                        },
                        new
                        {
                            StreetId = 2,
                            StreetName = "Tran Dai Nghia",
                            WardId = 1
                        },
                        new
                        {
                            StreetId = 3,
                            StreetName = "Trai Ca",
                            WardId = 2
                        },
                        new
                        {
                            StreetId = 4,
                            StreetName = "Hoang Ngan",
                            WardId = 3
                        },
                        new
                        {
                            StreetId = 5,
                            StreetName = "Truong Dinh",
                            WardId = 4
                        },
                        new
                        {
                            StreetId = 6,
                            StreetName = "Giap Nhi",
                            WardId = 5
                        });
                });

            modelBuilder.Entity("appcuoi.Data.Models.UserRoles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("appcuoi.Data.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("ActiveStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Inactive");

                    b.Property<DateTime>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 12, 12, 38, 19, 284, DateTimeKind.Local).AddTicks(7606));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("appcuoi.Data.Models.Ward", b =>
                {
                    b.Property<int>("WardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WardId"));

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("WardName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WardId");

                    b.HasIndex("DistrictId");

                    b.ToTable("Wards");

                    b.HasData(
                        new
                        {
                            WardId = 1,
                            DistrictId = 1,
                            WardName = "Bach Khoa"
                        },
                        new
                        {
                            WardId = 2,
                            DistrictId = 1,
                            WardName = "Bach Mai"
                        },
                        new
                        {
                            WardId = 3,
                            DistrictId = 3,
                            WardName = "Quan Nhan"
                        },
                        new
                        {
                            WardId = 4,
                            DistrictId = 2,
                            WardName = "Tuong Mai"
                        },
                        new
                        {
                            WardId = 5,
                            DistrictId = 2,
                            WardName = "Giap Bat"
                        });
                });

            modelBuilder.Entity("appcuoi.Data.Models.Houses", b =>
                {
                    b.HasOne("appcuoi.Data.Models.Street", "Street")
                        .WithMany()
                        .HasForeignKey("StreetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("appcuoi.Data.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Street");

                    b.Navigation("User");
                });

            modelBuilder.Entity("appcuoi.Data.Models.Street", b =>
                {
                    b.HasOne("appcuoi.Data.Models.Ward", "Ward")
                        .WithMany()
                        .HasForeignKey("WardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("appcuoi.Data.Models.Users", b =>
                {
                    b.HasOne("appcuoi.Data.Models.UserRoles", "Roles")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("appcuoi.Data.Models.Ward", b =>
                {
                    b.HasOne("appcuoi.Data.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });
#pragma warning restore 612, 618
        }
    }
}
